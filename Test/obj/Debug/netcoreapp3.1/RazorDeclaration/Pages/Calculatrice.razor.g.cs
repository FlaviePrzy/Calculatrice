#pragma checksum "D:\ISEN\M2\C#\Calculatrice\Flav\Test\Pages\Calculatrice.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0b0c1824cbfdaa9f9037f0a655999ef483979d7c"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Test.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\ISEN\M2\C#\Calculatrice\Flav\Test\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ISEN\M2\C#\Calculatrice\Flav\Test\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\ISEN\M2\C#\Calculatrice\Flav\Test\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\ISEN\M2\C#\Calculatrice\Flav\Test\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\ISEN\M2\C#\Calculatrice\Flav\Test\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\ISEN\M2\C#\Calculatrice\Flav\Test\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\ISEN\M2\C#\Calculatrice\Flav\Test\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\ISEN\M2\C#\Calculatrice\Flav\Test\_Imports.razor"
using Test;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\ISEN\M2\C#\Calculatrice\Flav\Test\_Imports.razor"
using Test.Shared;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Calculatrice")]
    public partial class Calculatrice : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 44 "D:\ISEN\M2\C#\Calculatrice\Flav\Test\Pages\Calculatrice.razor"
           
        private int _count = 0;
        private double variableglobale = 0;
        private double total = 0;
        private float test = 0;
        Boolean itworks = false;
        private int clique = 0;
        private int operateur = -1;
        Boolean addition = false;

        private int prec_operateur = -1;
        private int cpt = 0;
        String calcul = "";
        Boolean debut = true;
        Boolean reco = true;
        Boolean mul_div = true;
        double nb_vir = 0;



        private void KeyWasPressed(KeyboardEventArgs args)
        {
            switch (args.Key)
            {
                case "0":
                    zero();
                    break;

                case "1":
                    un();
                    break;

                case "2":
                    deux();
                    break;

                case "3":
                    trois();
                    break;

                case "4":
                    quatre();
                    break;

                case "5":
                    cinq();
                    break;

                case "6":
                    six();
                    break;

                case "7":
                    sept();
                    break;

                case "8":
                    huit();
                    break;

                case "9":
                    neuf();
                    break;

                case "+":
                    plus();
                    break;

                case "/":
                    division();
                    break;

                case "*":
                    fois();
                    break;

                case "-":
                    moins();
                    break;

                case "Enter":
                    egal();
                    break;

                case ".":
                    virgule();
                    break;

            }
        }

        private void egal()
        {

            calcul = calcul + variableglobale + " = ";
            switch (operateur)
            {
                case 1:
                    total = total + variableglobale;
                    break;
                case 2:
                    total = total - variableglobale;
                    break;
                case 3:
                    total = total * variableglobale;
                    break;
                case 4:
                    total = total / variableglobale;
                    break;
            }


            addition = false;
            debut = true;
            variableglobale = total;
            reco = true;
            itworks = true;
            mul_div = true;
            nb_vir = 0;
        }

        private void signe()
        {
            variableglobale = -variableglobale;
            total = variableglobale;
        }

        private void virgule()
        {
            mul_div = false;
            nb_vir = 1;


        }

        private void pourcentage()
        {
            variableglobale = (variableglobale / 100);
            total = variableglobale;
        }

        private void division()
        {
            if (debut == true && reco == false)
            {
                calcul = variableglobale.ToString() + "/";
                debut = false;

            }
            else
            {
                if (itworks == true)
                {
                    calcul = "";
                    itworks = false;
                }

                calcul = calcul + variableglobale.ToString() + "/";
            }

            operateur = 4;
            cpt++;

            if (addition == false)
            {
                total = variableglobale;
                variableglobale = 0;
                addition = true;
            }
            else
            {
                switch (prec_operateur)
                {
                    case 1:
                        total = total + variableglobale;
                        break;
                    case 2:
                        total = total - variableglobale;
                        break;
                    case 3:
                        total = total * variableglobale;
                        break;
                    case 4:
                        total = total / variableglobale;
                        break;
                }
            }

            variableglobale = 0;
            prec_operateur = operateur;
        }


        private void fois()
        {
            if (debut == true && reco == false)
            {
                calcul = variableglobale.ToString() + "*";
                debut = false;
            }
            else
            {
                if (itworks == true)
                {
                    calcul = "";
                    itworks = false;
                }
                calcul = calcul + variableglobale.ToString() + "*";
            }

            operateur = 3;
            cpt++;

            if (addition == false)
            {
                total = variableglobale;
                variableglobale = 0;
                addition = true;
            }
            else
            {
                switch (prec_operateur)
                {
                    case 1:
                        total = total + variableglobale;
                        break;
                    case 2:
                        total = total - variableglobale;
                        break;
                    case 3:
                        total = total * variableglobale;
                        break;
                    case 4:
                        total = total / variableglobale;
                        break;
                }
            }

            variableglobale = 0;
            prec_operateur = operateur;

        }

        private void ac()
        {
            variableglobale = 0;
            total = 0;
            calcul = " ";
            mul_div = true;
            nb_vir = 0;
        }

        private void moins()
        {
            if (debut == true && reco == false)
            {
                calcul = variableglobale.ToString() + " - ";
                debut = false;
            }
            else
            {
                if (itworks == true)
                {
                    calcul = "";
                    itworks = false;
                }
                calcul = calcul + variableglobale.ToString() + " - ";
            }

            operateur = 2;
            cpt++;

            if (addition == false)
            {
                total = variableglobale;
                variableglobale = 0;
                addition = true;

            }
            else
            {
                switch (prec_operateur)
                {
                    case 1:
                        total = total + variableglobale;
                        break;
                    case 2:
                        total = total - variableglobale;
                        break;
                    case 3:
                        total = total * variableglobale;
                        break;
                    case 4:
                        total = total / variableglobale;
                        break;
                }
            }
            prec_operateur = operateur;

            variableglobale = 0;
        }

        private void plus()
        {
            if (debut == true && reco == false)
            {
                calcul = variableglobale.ToString() + " + ";
                debut = false;
            }
            else
            {
                if (itworks == true)
                {
                    calcul = "";
                    itworks = false;
                }
                calcul = calcul + variableglobale.ToString() + " + ";
            }



            operateur = 1;
            cpt++;


            if (addition == false)
            {
                total = variableglobale;
                variableglobale = 0;
                addition = true;
            }
            else
            {
                switch (prec_operateur)
                {
                    case 1:
                        total = total + variableglobale;
                        break;
                    case 2:
                        total = total - variableglobale;
                        break;
                    case 3:
                        total = total * variableglobale;
                        break;
                    case 4:
                        total = total / variableglobale;
                        break;
                }


            }
            variableglobale = 0;
            prec_operateur = operateur;
        }

        private void zero()
        {
            int a = 0;

            if(mul_div)
            {
                variableglobale = variableglobale * 10 + a;
            }
            else
            {
                variableglobale = variableglobale + a/(Math.Pow(10,nb_vir));
                nb_vir++;
            }

        }

        private void un()
        {
            int a = 1;

            if(mul_div)
            {
                variableglobale = variableglobale * 10 + a;
            }
            else
            {
                variableglobale = variableglobale + a/(Math.Pow(10,nb_vir));
                nb_vir++;
            }


        }

        private void deux()
        {
            int a = 2;

            if(mul_div)
            {
                variableglobale = variableglobale * 10 + a;
            }
            else
            {
                variableglobale = variableglobale + a/(Math.Pow(10,nb_vir));
                nb_vir++;
            }

        }

        private void trois()
        {
            int a = 3;

            if(mul_div)
            {
                variableglobale = variableglobale * 10 + a;
            }
            else
            {
                variableglobale = variableglobale + a/(Math.Pow(10,nb_vir));
                nb_vir++;
            }

        }

        private void quatre()
        {
            int a = 4;

            if(mul_div)
            {
                variableglobale = variableglobale * 10 + a;
            }
            else
            {
                variableglobale = variableglobale + a/(Math.Pow(10,nb_vir));
                nb_vir++;
            }
        }

        private void cinq()
        {
            int a = 5;

            if(mul_div)
            {
                variableglobale = variableglobale * 10 + a;
            }
            else
            {
                variableglobale = variableglobale + a/(Math.Pow(10,nb_vir));
                nb_vir++;
            }
        }

        private void six()
        {
            int a = 6;

            if(mul_div)
            {
                variableglobale = variableglobale * 10 + a;
            }
            else
            {
                variableglobale = variableglobale + a/(Math.Pow(10,nb_vir));
                nb_vir++;
            }
        }

        private void sept()
        {
            int a = 7;

            if(mul_div)
            {
                variableglobale = variableglobale * 10 + a;
            }
            else
            {
                variableglobale = variableglobale + a/(Math.Pow(10,nb_vir));
                nb_vir++;
            }
        }

        private void huit()
        {
            int a = 8;

            if(mul_div)
            {
                variableglobale = variableglobale * 10 + a;
            }
            else
            {
                variableglobale = variableglobale + a/(Math.Pow(10,nb_vir));
                nb_vir++;
            }
        }

        private void neuf()
        {
            int a = 9;

            if(mul_div)
            {
                variableglobale = variableglobale * 10 + a;
            }
            else
            {
                variableglobale = variableglobale + a/(Math.Pow(10,nb_vir));
                nb_vir++;
            }
        }
    

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
